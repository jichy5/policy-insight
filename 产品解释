import os
import time
import json
import random
from http import HTTPStatus
import dashscope
from dashscope import Generation
from dashscope.api_entities.dashscope_response import Role
from http import HTTPStatus
import dashscope
import time
%matplotlib inline
import pandas as pd
from bs4 import BeautifulSoup
import webbrowser
import requests
import warnings
import re
import pandas as pd
import matplotlib
import numpy as np
import matplotlib.pyplot as plt
import jieba as jb
import re
from collections import Counter
from wordcloud import WordCloud
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.feature_extraction.text import TfidfTransformer
from sklearn.naive_bayes import MultinomialNB
from pylab import mpl
# Author: benjaminYang
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
import time
import json
# 设置显示中文字体
mpl.rcParams["font.sans-serif"] = ["SimHei"]
warnings.filterwarnings('ignore')  # 忽略所有警告

##自行填写
dashscope.api_key = ''

input_system = '''
# 角色描述
你是一个词汇解释专家，擅长采用专业和易于理解的语言解释各种词汇。

## 技能
### 技能 1: 用专业语言解释
- 对用户提出的词汇进行深入研究，以专业的术语和语境来解释之。
- 用资料库或百科来找到词汇的相关信息。

### 技能 2: 用通俗易懂的语言解释
- 尝试将复杂的专业词汇转化为用户可以理解的语言。
- 提供生活中的实例或类比，帮助用户理解词汇的含义。

## 限制:
- 只解释与词汇相关的问题。
- 尽量保持专业和通俗易懂的解释并行进行。
- 使用知识库的内容进行解释。对于未知的词汇，可以回答你也不清楚。'''

excel_file = "D:/实习/测试结果/524政策洞察/产品.xlsx"
df = pd.read_excel(excel_file)

### 
# 读取Excel文件
start_time = time.time()

df_result = pd.DataFrame(columns=['text','count', 'explain'])
for index,(result,numb) in enumerate(zip(df['text'], df['count'])):  
    flag1= 0
    # 执行一些操作，直到至少过去了10秒
    
    # 使用Beautiful Soup解析HTML内容
    
    try:
        
        content = result
#             content = result
#             input_text =  ' 给' + content + '选择' + classify_title + '里面规定的主题，如果有对应的主题则输出主题名称（注意只能输出一个主题名称），如果没有对应的主题，则输出无对应主题（这里得从这个政策完全看粗这个标题才输出对应主题） '

        messages = [{'role': 'system', 'content': input_system},
        {'role': 'user', 'content': '这是一个产品: \n ' + content}]
        while(flag1 == 0):
            response = Generation.call(
                'qwen-1.8b-chat',
                messages=messages,
                temperature = 0.5,
                # set the random seed, optional, default to 1234 if not set
                seed=random.randint(1, 10000),
                result_format='message',  # set the result to be "message"  format.
#                     enable_search = True,

            )
            if response.status_code == HTTPStatus.OK:
                conclude = response.output.choices[0]['message']['content']
                messages.append({'role': response.output.choices[0]['message']['role'],
                                 'content': response.output.choices[0]['message']['content']})
                flag1 = 1 
            else:
                print('Request id: %s, Status code: %s, error code: %s, error message: %s' % (
                    response.request_id, response.status_code,
                    response.code, response.message
                ))
                if response.status_code == 400:
                    raise ValueError("这是一个故意的错误")
                else:
                    time.sleep(30)
            print(conclude)
            df_result = df_result.append({'text': result,'count': numb,'explain': conclude}, ignore_index=True)
            
            
            print('\n')
            print(f'当前行: {index + 1}')

        
    except Exception as e:
        print(e)
        conclude = '文本错误'
        df_result = df_result.append({'text': result,'count': numb,'explain': '有错误'},
                                     ignore_index=True)


    
    



    print('\n')
#     print(f'内容:{result}')
    if (index + 1) % 100 == 0:
        df_result.to_excel('D:/实习/测试结果/524政策洞察/5.28产品词语解释2.xlsx')
        print(f'当前行: {index + 1}')

end_time = time.time()
execution_time = end_time - start_time
print("代码执行时间:", execution_time, "秒")

df_result.to_excel('D:/实习/测试结果/524政策洞察/5.28产品词语解释2.xlsx')
